//
// Implements the architecture-specific part of interrupt object support.
//

#INCLUDE "../Ki.hjk"

EXPORT FN KeConnectInterrupt (
    IN interrupt : ^KeInterrupt,
) : UWORD

    // Connect the interrupt object so that the routine is called whenever the
    // specified interrupt is raised. Returns TRUE if connected, FALSE
    // otherwise.
    //
    // NOTE: No attempt is made to synchronize against an interrupt object being
    //       connected multiple times concurrently, or being disconnected and
    //       connected simultaneously.

    IF interrupt^.Connected OR
        interrupt^.Vector >= HAL_VECTOR_MAX OR
        interrupt^.ShareVector THEN

        // Already connected, or beyond maximum, or shared (which we never do on
        // fox32 platforms).

        RETURN FALSE
    END

    status := FALSE

    // Get the Prb for the target processor.

    prb := KI_CURRENT_PRB

    IF prb^.IrqDispatchTable[interrupt^.Vector] THEN
        // Vector already in use. fox32 platforms never share IRQs, so
        // just leave with a failure status rather than chaining the
        // interrupt object on.

        GOTO Out
    END

    // Set the interrupt object in the table.

    prb^.IrqDispatchTable[interrupt^.Vector] = interrupt

    // Set the interrupt object connected.

    interrupt^.Connected = TRUE

    status = TRUE

@Out

    RETURN status
END

EXPORT FN KeDisconnectInterrupt (
    IN interrupt : ^KeInterrupt,
) : UWORD

    // Disconnect the interrupt so that the routine is no longer called.
    //
    // NOTE: No attempt is made to synchronize against an interrupt object being
    //       disconnected multiple times concurrently, or being disconnected and
    //       connected simultaneously.

    IF NOT interrupt^.Connected THEN
        RETURN FALSE
    END

    // Get the Prb for the target processor.

    prb := KI_CURRENT_PRB

    // Clear the interrupt object in the table.

    prb^.IrqDispatchTable[interrupt^.Vector] = NULLPTR

    // Set the interrupt object disconnected.

    interrupt^.Connected = FALSE

    RETURN TRUE
END