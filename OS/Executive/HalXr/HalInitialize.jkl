//
// Implements initialization for the XR/station HAL.
//

#INCLUDE "Halp.hjk"

#ASM [

HalpEnableInterrupts:
    mfcr t0, rs
    ori  t0, t0, 2
    mtcr rs, t0
    ret

]

EXTERN FN HalpEnableInterrupts ()

#DEFINE HALP_LSIC_GAP 32

STRUCT PACKED HalpLsic
    Mask0 : ULONG,
    Mask1 : ULONG,
    Pending0 : ULONG,
    Pending1 : ULONG,
    ClaimComplete : ULONG,
    Ipl : ULONG,
    Reserved0 : ULONG,
    Reserved1 : ULONG,
END

STRUCT PACKED HalpTimer
    CmdPort : ULONG,
    DataPort : ULONG,
END

#SECTION "INIT$text"
FN HalpConfigureTimer ()

    // Configure the timer interrupt to interrupt at 5ms intervals.

    timer := CAST ExLoaderBlock.U.Xr.CitronBase + 0x80 TO ^HalpTimer

    timer^.DataPort = HAL_TIMER_INTERVAL
    BARRIER

    timer^.CmdPort = 1
    BARRIER
END

#SECTION "INIT$text"
FN HalpInitializeLsic (
    IN procid : UWORD,
)

    // Initialize the interrupt controller to mask out all interrupts except
    // for the timer interrupt and IPI interrupt. Then enable interrupts.

    lsic :=
        CAST ExLoaderBlock.U.Xr.LsicBase + procid * HALP_LSIC_GAP TO ^HalpLsic

    prb := KI_CURRENT_PRB

    // Stash the LSIC base.

    prb^.LsicBase = lsic

    // Reset the pending registers.

    lsic^.Pending0 = 0
    lsic^.Pending1 = 0
    BARRIER

    // Initially set the IPL to 63 to enable all.

    lsic^.Ipl = 63
    BARRIER

    // Configure the mask to enable IPIs and the timer.

    lsic^.Mask0 = 0xFFFFFFF9
    lsic^.Mask1 = 0xFFFFFFFF
    BARRIER

    // Enable interrupts.

    HalpEnableInterrupts ()
END

#SECTION "INIT$text"
FN HalProcessorInitialize ()

    // Do whatever is needed to initialize the current processor.

    HalpInitializeLsic ( KiCurrentProcessor () )
END

#SECTION "INIT$text"
FN HalEarlyInitialize ()

    // This initialization routine is called before there is a system thread
    // context. Here we have to establish everything required for base line
    // functionality, including a simple boot console of some variety.

    HalpInitializeConsole ()

    HalpConfigureTimer ()

    HalProcessorInitialize ()
END