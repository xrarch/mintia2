//
// Public header file for the Executive Support (Ex) component of the MINTIA
// Executive.
//

#INCLUDE "<inc>/Ke.hjk"

EXTERN FN (KeStartThreadF) ExStartSystemProcess (
    IN context1 : UWORD,
    IN context2 : UWORD,
)

STRUCT ExHandleTable
    Entries : UWORD,

    QuotaBlock : ^MiQuotaBlock,

    Table : ^^VOID,

    FreeListHead : ULONG,

    EntrySizeLog : UBYTE,
END

FNPTR ExHandleTableEnumerationF (
    IN handletable : ^ExHandleTable,
    IN handle : UWORD,
    IN entryptr : ^VOID,
    IN context : UWORD,
)

EXTERN FN ExInitializeHandleTable (
    IN handletable : ^ExHandleTable,
    IN entrysizelog : UWORD,
    IN quotablock : ^MiQuotaBlock,
)

EXTERN FN ExEnumerateHandleTable (
    IN handletable : ^ExHandleTable,
    IN func : ExHandleTableEnumerationF,
    IN context : UWORD,
)

EXTERN FN ExLookupHandle (
    IN handletable : ^ExHandleTable,
    IN handle : UWORD,
) : ^VOID

EXTERN FN ExDeleteHandleTable (
    IN handletable : ^ExHandleTable,
    IN func : ExHandleTableEnumerationF,
    IN context : UWORD,
)

EXTERN FN ExDeleteHandle (
    IN handletable : ^ExHandleTable,
    IN handle : UWORD,
    IN entry : ^VOID,
) : UWORD

EXTERN FN ExCreateHandle (
    IN handletable : ^ExHandleTable,
    OUT handle : UWORD,
    OUT entryptr : ^VOID,
) : OsStatus

STRUCT ExpEventCounterUsed
    Event : KeEvent,
    References : ULONG,
END

UNION ExEventCounter
    Used : ExpEventCounterUsed,
    Free : RtlListEntry,
END

EXTERN FN ExAllocateEventCounter (
    IN wait : UWORD,
) : ^ExEventCounter

EXTERN FN ExReferenceEventCounter (
    IN counter : ^ExEventCounter,
)

EXTERN FN ExUnreferenceEventCounter (
    IN counter : ^ExEventCounter,
)

STRUCT ExName
    Entry : RtlAvlNode,

    References : ULONG,

    BucketIndex : UBYTE,
END

#MACRO ExNameToString ( name ) [
    (CAST (name + SIZEOF ExName) TO ^UBYTE)
]

EXTERN FN ExFindName (
    IN str : ^UBYTE,
) : ^ExName

EXTERN FN ExUnreferenceName (
    IN name : ^ExName,
)

EXTERN FN ExReferenceName (
    IN name : ^ExName,
)

EXTERN FN ExSafeCopyIn (
    IN dest : ^VOID,
    IN src : ^VOID,
    IN sz : UWORD,
) : OsStatus

EXTERN FN ExSafeCopyOut (
    IN dest : ^VOID,
    IN src : ^VOID,
    IN sz : UWORD,
) : OsStatus

EXTERN FN ExCaptureString (
    IN string : ^UBYTE,
    OUT output : ^UBYTE,
) : OsStatus

EXTERN FN ExFreeString (
    IN string : ^UBYTE,
)

STRUCT ExEvent
    Event : KeEvent,
END