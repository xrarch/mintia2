//
// Public header for object management for the MINTIA Executive.
//

#INCLUDE "<inc>/Ke.hjk"

#INCLUDE "<ll>/System/OsObject.hjk"

FNPTR ObTypeOpenF (
    IN process : ^PsProcess,
    IN object : ^VOID,
    IN access : UWORD,
) : OsStatus

FNPTR ObTypeCloseF (
    IN object : ^VOID,
    IN access : UWORD,
    IN lasthandlecount : UWORD,
)

FNPTR ObTypeDeleteF (
    IN object : ^VOID,
) : UWORD

FNPTR ObTypeSetSecurityF (
    IN object : ^VOID,
    IN permissions : ^ObPermissions,
) : OsStatus

FNPTR ObTypeNamespaceLookupF (
    IN context : ^NsLookupContext,
) : OsStatus

FNPTR ObTypeInitializeF (
    IN object : ^VOID,
    IN context : ^VOID,
) : OsStatus

#DEFINE OB_NAME_MAX 256

#DEFINE OB_FLAG_PERMANENT 1

#DEFINE OB_TYPE_NO_WAIT_OFFSET 0xFFFFFFFF

STRUCT ObType
    Name : ^UBYTE,

    Open : ObTypeOpenF,
    Close : ObTypeCloseF,
    Delete : ObTypeDeleteF,
    SetSecurity : ObTypeSetSecurityF,
    NamespaceLookup : ObTypeNamespaceLookupF,

    Initialize : ObTypeInitializeF,

    WaitOffset : ULONG,
    TypeIdentifier : ULONG,
    Tag : ULONG,

    IsPaged : UBYTE,
END

STRUCT ObCredentials
    Uid : ULONG,
    Gid : ULONG,
END

STRUCT ObPermissions
    Cred : ObCredentials,
    Access : ULONG,
END

STRUCT ObHeader
    Type : ^ObType,

    QuotaBlock : ^MiQuotaBlock,

    Lock : KeLock,

    NamespaceEntry : ^NsEntry,

    Permissions : ObPermissions,

    Flags : ULONG,

    PagedQuotaCharge : ULONG,
    NonpagedQuotaCharge : ULONG,

    HandleCount : UWORD,
END

STRUCT ObpCommonHeader
    Header : ^ObHeader,
    PointerCount : UWORD,
    NextToReap : ^VOID,
END

STRUCT ObParameters
    Type : ^ObType,

    Context : ^VOID,

    Permissions : ObPermissions,
    Flags : ULONG,
    BodySize : ULONG,
    PagedBodySize : ULONG,
    NpQuotaBias : ULONG,
    PgQuotaBias : ULONG,
END

#MACRO ObFindObjectFromCommonHeader ( commonheader ) [
    (CAST (commonheader + SIZEOF ObpCommonHeader) TO ^VOID)
]

#MACRO ObFindCommonHeader ( object ) [
    (CAST (object - SIZEOF ObpCommonHeader) TO ^ObpCommonHeader)
]

#MACRO ObFindHeader ( object ) [
    (ObFindCommonHeader ( object )^.Header)
]

#MACRO ObFindPagedPart ( object ) [
    (ObFindHeader ( object ) + SIZEOF ObHeader)
]

#MACRO ObMoveCredentials ( dest, src ) [
    NOTHING (dest)^.Uid = (src)^.Uid
    NOTHING (dest)^.Gid = (src)^.Gid
]

EXTERN FN ObInitialize ()

EXTERN FN ObCheckAccess (
    IN permissions : ^ObPermissions,
    IN cred : ^ObCredentials,
    IN access : UWORD,
) : UWORD

EXTERN FN ObCheckAccessForCurrent (
    IN object : ^VOID,
    IN access : UWORD,
) : UWORD

EXTERN FN ObAllocateObject (
    IN obparams : ^ObParameters,
    OUT object : ^VOID,
) : OsStatus

EXTERN FN ObFreeObject (
    IN object : ^VOID,
)

EXTERN FN ObDeleteObject (
    IN object : ^VOID,
)

EXTERN FN ObConditionallyReferenceObject (
    IN object : ^VOID,
) : UWORD

EXTERN FN ObUnreferenceObjectDeferDelete (
    IN object : ^VOID,
)

EXTERN FN ObUnreferenceObject (
    IN object : ^VOID,
)

EXTERN FN ObReferenceObject (
    IN object : ^VOID,
)

EXTERN FN ObInitializeProcess (
    IN parentprocess : ^PsProcess,
    IN process : ^PsProcess,
    IN quotablock : ^MiQuotaBlock,
)

EXTERN FN ObUninitializeProcess (
    IN process : ^PsProcess,
)

EXTERN FN ObInsertObject (
    IN process : ^PsProcess,
    IN object : ^VOID,
    IN access : UWORD,
    OUT handle : UWORD,
) : OsStatus

EXTERN FN ObCloseObject (
    IN process : ^PsProcess,
    IN handle : UWORD,
) : OsStatus

EXTERN FN ObReferenceByHandleObject (
    IN process : ^PsProcess,
    IN handle : UWORD,
    IN type : ^ObType,
    OUT object : ^VOID,
    OUT access : UWORD,
) : OsStatus

EXTERN FN ObReferenceByHandle (
    IN handle : UWORD,
    IN type : ^ObType,
    OUT object : ^VOID,
    OUT access : UWORD,
) : OsStatus

EXTERN FN ObDeferredDeletionWorker ()

EXTERN ObDeferredDeletionListHead : ^ObHeader