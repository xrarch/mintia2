//
// Initialization for the MINTIA system debugger.
//

#INCLUDE "Dbg.hjk"

DbgStackTraceCallback : KeCrashCallback

PUBLIC DbgCauseCrash := FALSE

DbgEntryCount : ULONG

FN (KeDebuggerEntryF) DbgEntrypoint (
    IN context : ^OsContext,
)

    // Assumes interrupts are disabled on entry.

    cnt := KeIncrementUlong (
        &DbgEntryCount, // ptr
        1, // inc
    )

    IF cnt != 0 THEN
        // Nested entry. Ignore.

        KeIncrementUlong (
            &DbgEntryCount, // ptr
            0xFFFFFFFF, // inc
        )

        LEAVE
    END

    old := HalSetDebugConsole ( TRUE )

#IF BLD_MP
    KiFreezeOtherProcessors ()
#END

    NOTHING KI_CURRENT_PRB_LOCAL^.FrozenContext = context

    DbgCurrentContext = context
    DbgCurrentPrb = KI_CURRENT_PRB

    DbgPrompt ()

#IF BLD_MP
    KiUnfreezeOtherProcessors ()
#END

    HalSetDebugConsole ( old )

    KeIncrementUlong (
        &DbgEntryCount, // ptr
        0xFFFFFFFF, // inc
    )

    IF DbgCauseCrash THEN
        KeCrash ( "Debug\n" )
    END
END

EXPORT FN DbgMain ()
    
    // First register the crash callbacks.

    KeRegisterCrashCallback (
        &DbgStackTraceCallback, // callback
        &DbgStackTrace, // callbackfunc
        TRUE, // doesprint
        FALSE, // horizontal
    )

    // Now register the debugger prompt entry.

    KeDebuggerEntry = &DbgEntrypoint

    // Announce ourselves.

    RtlPrint ( "DbgMain: Debugger installed\n" )
END