//
// Boot driver management for the MINTIA Loader.
//

#INCLUDE "Bl.hjk"

FN BlLoadDriver (
    IN name : ^UBYTE,
) : ^BlDll

    dll := BlLoadDll ( name )

    IF NOT dll THEN
        RETURN NULLPTR
    END

    IF NOT BlLookupSymbol (
        dll, // dll
        "DrvInitialize", // name
        OUT dll^.DriverEntrypoint, // value
    ) THEN

        dll^.DriverEntrypoint = NULLPTR

        RtlPrint ( "WARNING: Driver '%s' had no entrypoint\n", name )
    END

    RETURN dll
END

FN BlLoadExtension (
    IN name : ^UBYTE,
) : ^BlDll

    // Construct the path to the module, relative to the system directory.

    dllpath : UBYTE[64]

    RtlFormat (
        &dllpath[0], // dest
        64, // bufsize
        "Drivers/%s/%s.sys", // fmt
        name,
        name,
    )

    // Try to load the module.

    dll := BlLoadDriver ( &dllpath[0] )

    RETURN dll
END

FN (BlIterateEntriesCallbackF) BlLoadConfigFileCallback (
    IN name : ^UBYTE,
    IN context : ^VOID,
) : UWORD

    // Load the config file for this driver.

    cfgpath : UBYTE[64]

    RtlFormat (
        &cfgpath[0], // dest
        64, // bufsize
        "%s/%s.cfg", // fmt
        name,
        name,
    )

    BlLoadResource (
        BlDriverDirectory, // file
        name, // name
        &cfgpath[0], // path
        TRUE, // ioconfig
    )
END

FN BlLoadDrivers ()

    // Load all of the boot drivers.

    // First load the filesystem driver for the boot device.

    drv := BlLoadExtension ( BlBootDevice.DriverName )

    IF NOT drv THEN
        RtlPrint ( "WARNING: Couldn't load boot fs driver %s\n",
            BlBootDevice.DriverName )
    END

    // Call platform code to load whatever other storage drivers are necessary
    // for early boot.

    BxLoadDrivers ()

    // Load all of the configuration files for all drivers currently present.

    BlIterateEntries (
        BlDriverDirectory, // file
        &BlLoadConfigFileCallback, // callback
        NULLPTR, // context
        BL_FILETYPE_DIRECTORY, // type
    )
END