//
// Private header file for Loader.
//

#INCLUDE "<ll>/Rtl.hjk"

#INCLUDE "Headers/Loader.hjk"

#IF ( STRCMP PLATFORM "XRstation" )
    #INCLUDE "XRstation/Bl.hjk"

#ELSEIF ( STRCMP PLATFORM "fox32" )
    #INCLUDE "fox32/Bl.hjk"

#ELSE
    #ERROR ( STRCAT "Unknown platform " PLATFORM )
#END

#DEFINE BL_BUMP_EXTEND 8192

#DEFINE BL_MANAGED_KERNEL_SPACE [(256 * 1024 * 1024)]

EXTERN BlInfoBlock : BlInfoRecord

EXTERN BlArgCount : UWORD
EXTERN BlArgTable : ^^UBYTE

EXTERN BlDoRelinkAll : UWORD

EXTERN BlDescriptorList : RtlListEntry

EXTERN BlHeapTop : ^VOID
EXTERN BlHeapPointer : ^VOID

EXTERN BlBootDeviceName : UBYTE[64]

EXTERN BlTemporaryBuffer : UBYTE[1024]

EXTERN FN BlDumpDescriptors ()

EXTERN FN BlExit (
    IN status : UWORD,
)

EXTERN FN BlCrash (
    IN fmt : ^UBYTE,
    ... argv argc
)

EXTERN FN BlAllocateMemory (
    IN bytes : UWORD,
) : ^VOID

EXTERN FN BlAllocatePhysicalRange (
    IN pages : UWORD,
    IN type : BlMemoryDescriptorType,
) : ^BlMemoryDescriptor

EXTERN FN BlGetExistenceArg (
    IN str : ^UBYTE,
) : UWORD

EXTERN FN BlGetValueArg (
    IN key : ^UBYTE,
) : ^UBYTE

EXTERN FN BxMapRange (
    IN vaddr : ^VOID,
    IN phyaddr : ^VOID,
    IN pages : UWORD,
    IN pttype : BlMemoryDescriptorType,
    IN noncached : UWORD,
)

EXTERN FN BxMapPage (
    IN vaddr : ^VOID,
    IN phyaddr : ^VOID,
    IN pttype : BlMemoryDescriptorType,
    IN noncached : UWORD,
)

EXTERN FN BlAllocateKernelSpace (
    IN pages : UWORD,
    IN preferredva : ^VOID,
    IN fixed : UWORD,
) : ^VOID

EXTERN FN BlFreeKernelSpace (
    IN vaddr : ^VOID,
    IN pages : UWORD,
)

EXTERN FN BlAllocateMappedRange (
    IN pages : UWORD,
    IN preferredva : ^VOID,
    IN fixed : UWORD,
    IN type : BlMemoryDescriptorType,
    OUT desc : ^BlMemoryDescriptor,
) : ^VOID

EXTERN FN BxVirtualToPfn (
    IN vaddr : ^VOID,
) : UWORD

EXTERN FN BlMapIoRegion (
    IN pages : UWORD,
    IN phyaddr : ^VOID,
    IN noncached : UWORD,
) : ^VOID

EXTERN FN BlFreePhysicalRange (
    IN desc : ^BlMemoryDescriptor
)

FNPTR BlMountF (
    IN device : ^BlFile,
) : UWORD

FNPTR BlOpenF (
    IN device : ^BlFile,
    IN path : ^UBYTE,
) : ^BlFile

FNPTR BlReadF (
    IN file : ^BlFile,
    IN offset : UWORD,
    IN buf : ^VOID,
    IN length : UWORD,
) : UWORD

STRUCT BlFile
    Open : BlOpenF,
    Read : BlReadF,
    DriverContext : ^VOID,
    MountContext : ^VOID,
    BlockSize : UWORD,
    Device : ^BlFile,
    Size : UWORD,
END

EXTERN FN BxInitializeIo (
    IN bootdevname : ^UBYTE,
)

EXTERN FN BlInitializeFile (
    IN file : ^BlFile,
)

EXTERN FN BlReadFile (
    IN file : ^BlFile,
    IN offset : UWORD,
    IN buf : ^VOID,
    IN length : UWORD,
) : UWORD

EXTERN FN BlOpenFile (
    IN device : ^BlFile,
    IN path : ^UBYTE,
) : ^BlFile

EXTERN BlBootDevice : BlFile

FNPTR BlCallbackPerLineF (
    IN buf : ^UBYTE,
    IN context : ^VOID,
    IN linenum : UWORD,
)

EXTERN FN BlCallbackPerLine (
    IN buf : ^UBYTE,
    IN callback : BlCallbackPerLineF,
    IN context : ^VOID,
)

EXTERN FN BlCallbackPerLineFile (
    IN device : ^BlFile,
    IN path : ^UBYTE,
    IN callback : BlCallbackPerLineF,
    IN context : ^VOID,
) : UWORD